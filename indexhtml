<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hindi-English Dictation Practice | By Shiv</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #1a2a6c);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }
        
        .container {
            background-color: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
            width: 100%;
            max-width: 850px;
            padding: 30px;
            position: relative;
            overflow: hidden;
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
            position: relative;
            padding-bottom: 15px;
        }
        
        .header h1 {
            font-size: 2.8rem;
            margin-bottom: 10px;
            color: #2c3e50;
            background: linear-gradient(45deg, #1a2a6c, #b21f1f);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .header p {
            color: #7f8c8d;
            font-size: 1.2rem;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .author {
            position: absolute;
            top: 0;
            right: 0;
            background: linear-gradient(to right, #3498db, #2ecc71);
            color: white;
            padding: 5px 15px;
            border-radius: 20px 0 0 20px;
            font-size: 0.9rem;
            box-shadow: -2px 2px 5px rgba(0,0,0,0.2);
        }
        
        .input-section {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 30px;
            background: #f8f9fa;
            padding: 20px;
            border-radius: 15px;
            box-shadow: inset 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .input-section input {
            flex: 1;
            min-width: 200px;
            padding: 16px 22px;
            border: 2px solid #e0e0e0;
            border-radius: 50px;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .input-section input:focus {
            border-color: #3498db;
            outline: none;
            box-shadow: 0 0 12px rgba(52, 152, 219, 0.5);
        }
        
        .language-selector {
            display: flex;
            background-color: #f1f2f6;
            border-radius: 50px;
            padding: 5px;
            margin-bottom: 20px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        }
        
        .lang-btn {
            flex: 1;
            padding: 13px 20px;
            border: none;
            border-radius: 50px;
            background: none;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1.1rem;
        }
        
        .lang-btn.active {
            background: linear-gradient(to right, #ff6b6b, #ff8e53);
            color: white;
            box-shadow: 0 4px 8px rgba(255, 107, 107, 0.3);
        }
        
        .btn {
            padding: 16px 32px;
            background: linear-gradient(to right, #3498db, #2ecc71);
            border: none;
            border-radius: 50px;
            color: white;
            font-weight: 600;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.4);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(52, 152, 219, 0.6);
        }
        
        .btn:active {
            transform: translateY(1px);
        }
        
        .btn-play-all {
            background: linear-gradient(to right, #9b59b6, #8e44ad);
            margin-top: 20px;
            width: 100%;
            padding: 18px;
            font-size: 1.2rem;
        }
        
        .words-container {
            background-color: #f8f9fa;
            border-radius: 15px;
            padding: 20px;
            max-height: 400px;
            overflow-y: auto;
            box-shadow: inset 0 2px 5px rgba(0,0,0,0.05);
            border: 1px solid #eee;
        }
        
        .word-card {
            background-color: white;
            border-radius: 15px;
            padding: 18px 22px;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
        }
        
        .word-card:hover {
            transform: translateX(5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }
        
        .word-card.hindi {
            border-left: 5px solid #e74c3c;
        }
        
        .word-card.english {
            border-left: 5px solid #3498db;
        }
        
        .word-card.speaking {
            animation: pulse 1.5s infinite;
            background: linear-gradient(to right, #e3f2fd, #ffffff);
        }
        
        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(52, 152, 219, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(52, 152, 219, 0); }
            100% { box-shadow: 0 0 0 0 rgba(52, 152, 219, 0); }
        }
        
        .word-text {
            font-size: 1.5rem;
            font-weight: 600;
        }
        
        .word-actions {
            display: flex;
            gap: 12px;
        }
        
        .action-btn {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 3px 6px rgba(0,0,0,0.1);
        }
        
        .play-btn {
            background: linear-gradient(to right, #2ecc71, #1abc9c);
            color: white;
        }
        
        .delete-btn {
            background: linear-gradient(to right, #e74c3c, #c0392b);
            color: white;
        }
        
        .action-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 5px 10px rgba(0,0,0,0.15);
        }
        
        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: #7f8c8d;
        }
        
        .empty-state i {
            font-size: 5rem;
            margin-bottom: 25px;
            color: #bdc3c7;
            opacity: 0.7;
        }
        
        .empty-state p {
            font-size: 1.3rem;
            margin-top: 10px;
        }
        
        .controls {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
            background: #f8f9fa;
            padding: 20px;
            border-radius: 15px;
        }
        
        .speed-control {
            display: flex;
            align-items: center;
            gap: 15px;
            background: linear-gradient(to right, #e3f2fd, #f1f8fe);
            padding: 12px 25px;
            border-radius: 50px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.05);
        }
        
        .speed-control label {
            font-weight: 600;
            color: #2c3e50;
            font-size: 1.1rem;
        }
        
        .speed-control input {
            width: 200px;
            height: 10px;
            -webkit-appearance: none;
            background: #d1e7ff;
            border-radius: 5px;
            outline: none;
        }
        
        .speed-control input::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 25px;
            height: 25px;
            border-radius: 50%;
            background: #3498db;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        
        #speedValue {
            min-width: 50px;
            font-weight: 700;
            color: #1a2a6c;
            font-size: 1.2rem;
        }
        
        .instructions {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 20px;
            margin-top: 25px;
            font-size: 1.05rem;
            line-height: 1.6;
        }
        
        .instructions h3 {
            margin-bottom: 12px;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .instructions ul {
            padding-left: 25px;
        }
        
        .instructions li {
            margin-bottom: 8px;
        }
        
        .instructions li strong {
            color: #1a2a6c;
        }
        
        /* New preset speed buttons */
        .preset-speeds {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 15px;
            flex-wrap: wrap;
        }
        
        .preset-btn {
            padding: 10px 15px;
            background: linear-gradient(to right, #9b59b6, #8e44ad);
            border: none;
            border-radius: 50px;
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 3px 8px rgba(0,0,0,0.2);
            font-size: 0.95rem;
        }
        
        .preset-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 12px rgba(0,0,0,0.25);
        }
        
        .preset-btn.active {
            background: linear-gradient(to right, #e74c3c, #c0392b);
            box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.3);
        }
        
        @media (max-width: 700px) {
            .container {
                padding: 20px;
            }
            
            .header h1 {
                font-size: 2.2rem;
            }
            
            .input-section {
                flex-direction: column;
            }
            
            .word-text {
                font-size: 1.3rem;
            }
            
            .controls {
                flex-direction: column;
                align-items: center;
            }
            
            .author {
                position: static;
                border-radius: 20px;
                margin-top: 10px;
                display: inline-block;
            }
            
            .preset-speeds {
                gap: 8px;
            }
            
            .preset-btn {
                padding: 8px 12px;
                font-size: 0.85rem;
            }
        }
        
        footer {
            text-align: center;
            margin-top: 25px;
            color: #7f8c8d;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-language"></i> Hindi-English Dictation</h1>
            <p>Add difficult words and practice your dictation skills</p>
            <div class="author">Made by Shiv</div>
        </div>
        
        <div class="language-selector">
            <button class="lang-btn active" id="hindiBtn">Hindi</button>
            <button class="lang-btn" id="englishBtn">English</button>
        </div>
        
        <div class="input-section">
            <input type="text" id="wordInput" placeholder="Enter a difficult word...">
            <button class="btn" id="addWordBtn">
                <i class="fas fa-plus"></i> Add Word
            </button>
        </div>
        
        <div class="words-container" id="wordsList">
            <div class="empty-state">
                <i class="fas fa-book-open"></i>
                <p>No words added yet. Add some words to get started!</p>
            </div>
        </div>
        
        <button class="btn btn-play-all" id="playAllBtn">
            <i class="fas fa-play-circle"></i> Play All Words
        </button>
        
        <div class="controls">
            <div class="speed-control">
                <label for="speedControl"><i class="fas fa-tachometer-alt"></i> Speed:</label>
                <input type="range" id="speedControl" min="0.5" max="2" step="0.1" value="1">
                <span id="speedValue">1.0x</span>
            </div>
        </div>
        
        <!-- Preset speed buttons -->
        <div class="preset-speeds">
            <button class="preset-btn" data-speed="0.156">25 WPM</button>
            <button class="preset-btn" data-speed="0.125">20 WPM</button>
            <button class="preset-btn" data-speed="0.187">30 WPM</button>
            <button class="preset-btn" data-speed="0.219">35 WPM</button>
        </div>
        
        <div class="instructions">
            <h3><i class="fas fa-info-circle"></i> How to use:</h3>
            <ul>
                <li><strong>Add words</strong> in your selected language (Hindi or English)</li>
                <li><strong>Click the play button</strong> next to each word to hear it pronounced</li>
                <li><strong>Adjust the speed</strong> to make words easier or more challenging</li>
                <li><strong>Use preset buttons</strong> for specific speeds (25, 20, 30, 35 WPM)</li>
                <li><strong>Practice writing</strong> the words as you hear them</li>
                <li><strong>Delete words</strong> once you've mastered them</li>
            </ul>
        </div>
        
        <footer>
            Note: Hindi pronunciation works best in Chrome and Edge browsers
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM elements
            const wordInput = document.getElementById('wordInput');
            const addWordBtn = document.getElementById('addWordBtn');
            const wordsList = document.getElementById('wordsList');
            const playAllBtn = document.getElementById('playAllBtn');
            const hindiBtn = document.getElementById('hindiBtn');
            const englishBtn = document.getElementById('englishBtn');
            const speedControl = document.getElementById('speedControl');
            const speedValue = document.getElementById('speedValue');
            const presetButtons = document.querySelectorAll('.preset-btn');
            
            let currentLanguage = 'hindi';
            let words = [];
            let speechRate = 1;
            let isSpeaking = false;
            let currentSpeakingIndex = -1;
            
            // Event listeners
            addWordBtn.addEventListener('click', addWord);
            playAllBtn.addEventListener('click', playAllWords);
            wordInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') addWord();
            });
            
            hindiBtn.addEventListener('click', function() {
                setLanguage('hindi');
            });
            
            englishBtn.addEventListener('click', function() {
                setLanguage('english');
            });
            
            speedControl.addEventListener('input', function() {
                speechRate = parseFloat(this.value);
                speedValue.textContent = speechRate.toFixed(1) + 'x';
                
                // Remove active class from all preset buttons
                presetButtons.forEach(btn => btn.classList.remove('active'));
            });
            
            // Add event listeners to preset buttons
            presetButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const speed = parseFloat(this.dataset.speed);
                    speechRate = speed;
                    speedControl.value = speed;
                    speedValue.textContent = speed.toFixed(3) + 'x';
                    
                    // Update active state
                    presetButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                });
            });
            
            // Set active language
            function setLanguage(lang) {
                currentLanguage = lang;
                hindiBtn.classList.toggle('active', lang === 'hindi');
                englishBtn.classList.toggle('active', lang === 'english');
                wordInput.placeholder = lang === 'hindi' 
                    ? 'कठिन हिंदी शब्द दर्ज करें...' 
                    : 'Enter a difficult English word...';
            }
            
            // Add word to list
            function addWord() {
                const word = wordInput.value.trim();
                if (!word) return;
                
                // Check if word already exists
                if (words.some(w => w.text === word && w.language === currentLanguage)) {
                    alert('This word is already in your list!');
                    return;
                }
                
                words.push({
                    text: word,
                    language: currentLanguage
                });
                
                renderWordsList();
                wordInput.value = '';
                wordInput.focus();
            }
            
            // Render words list
            function renderWordsList() {
                if (words.length === 0) {
                    wordsList.innerHTML = `
                        <div class="empty-state">
                            <i class="fas fa-book-open"></i>
                            <p>No words added yet. Add some words to get started!</p>
                        </div>
                    `;
                    return;
                }
                
                wordsList.innerHTML = '';
                words.forEach((word, index) => {
                    const wordElement = document.createElement('div');
                    wordElement.className = `word-card ${word.language} ${currentSpeakingIndex === index ? 'speaking' : ''}`;
                    wordElement.innerHTML = `
                        <div class="word-text">${word.text}</div>
                        <div class="word-actions">
                            <button class="action-btn play-btn" data-index="${index}">
                                <i class="fas fa-volume-up"></i>
                            </button>
                            <button class="action-btn delete-btn" data-index="${index}">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    `;
                    wordsList.appendChild(wordElement);
                });
                
                // Add event listeners to action buttons
                document.querySelectorAll('.play-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const index = parseInt(this.getAttribute('data-index'));
                        speakWord(words[index], index);
                    });
                });
                
                document.querySelectorAll('.delete-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const index = parseInt(this.getAttribute('data-index'));
                        // If currently speaking this word, stop speech
                        if (currentSpeakingIndex === index) {
                            window.speechSynthesis.cancel();
                            isSpeaking = false;
                            currentSpeakingIndex = -1;
                        }
                        words.splice(index, 1);
                        renderWordsList();
                    });
                });
            }
            
            // Speak a single word
            function speakWord(word, index) {
                if ('speechSynthesis' in window) {
                    // Cancel any ongoing speech
                    window.speechSynthesis.cancel();
                    
                    const utterance = new SpeechSynthesisUtterance(word.text);
                    
                    // Set language based on word
                    utterance.lang = word.language === 'hindi' ? 'hi-IN' : 'en-US';
                    utterance.rate = speechRate;
                    
                    // Set speaking state
                    isSpeaking = true;
                    currentSpeakingIndex = index;
                    renderWordsList();
                    
                    // Highlight the word while speaking
                    utterance.onstart = function() {
                        currentSpeakingIndex = index;
                        renderWordsList();
                    };
                    
                    utterance.onend = function() {
                        isSpeaking = false;
                        currentSpeakingIndex = -1;
                        renderWordsList();
                    };
                    
                    utterance.onerror = function() {
                        isSpeaking = false;
                        currentSpeakingIndex = -1;
                        renderWordsList();
                        alert('Error pronouncing the word. Please try again or use a different browser.');
                    };
                    
                    window.speechSynthesis.speak(utterance);
                } else {
                    alert('Text-to-speech is not supported in your browser. Try using Chrome or Edge.');
                }
            }
            
            // Play all words in sequence
            function playAllWords() {
                if (words.length === 0) {
                    alert('Please add some words first!');
                    return;
                }
                
                if (isSpeaking) {
                    window.speechSynthesis.cancel();
                    isSpeaking = false;
                    currentSpeakingIndex = -1;
                    renderWordsList();
                    playAllBtn.innerHTML = '<i class="fas fa-play-circle"></i> Play All Words';
                    return;
                }
                
                let index = 0;
                
                function playNextWord() {
                    if (index >= words.length) {
                        isSpeaking = false;
                        currentSpeakingIndex = -1;
                        renderWordsList();
                        playAllBtn.innerHTML = '<i class="fas fa-play-circle"></i> Play All Words';
                        return;
                    }
                    
                    speakWord(words[index], index);
                    index++;
                    
                    // Wait for the current word to finish before playing the next
                    const checkEnd = setInterval(() => {
                        if (!isSpeaking) {
                            clearInterval(checkEnd);
                            setTimeout(playNextWord, 500);
                        }
                    }, 100);
                }
                
                playAllBtn.innerHTML = '<i class="fas fa-stop"></i> Stop Playback';
                playNextWord();
            }
            
            // Initialize
            setLanguage('hindi');
            renderWordsList();
        });
    </script>
</body>
</html>
